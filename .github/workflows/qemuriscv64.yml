name: master-qemuriscv64

on:
  pull_request:
    types: [ opened, synchronize, reopened, closed ]
  release:
    types: [ published, created, edited ]

jobs:

  scarthgap-qemuriscv64-linux-dummy:

    env:
      MACHINE: qemuriscv64
      YOCTO_BRANCH: master

    runs-on: [self-hosted, linux]

    container:
      image: ghcr.io/meta-flutter/meta-flutter/ubuntu-24-dev:main
      options:
        --read-only
        --log-driver=none
        --user 1001:1001
        --userns keep-id:uid=1001,gid=1001
        --security-opt label=disable
        --pids-limit=-1
        --storage-opt overlay.mount_program=/usr/bin/fuse-overlayfs
        --storage-opt overlay.mountopt=nodev,metacopy=on,noxattrs=1
        -v /home/runner/.ssh:/home/dev/.ssh:ro
        -v /mnt/raid10/github-ci/download:/home/dev/dl:Z
        -v /mnt/raid10/github-ci/sstate/yocto/master-linux-dummy:/home/dev/sstate:Z


    steps:

      - uses: actions/checkout@v4
        with:
          path: ''

      - name: Fetch poky
        run: |
          [ -d ../master-linux-dummy ] || mkdir -p ../master-linux-dummy
          cd ../master-linux-dummy
          pwd
          ls -la
          rm -rf poky meta-openembedded meta-drm meta-vulkan
          git clone -b ${{ env.YOCTO_BRANCH }} --single-branch git://git.yoctoproject.org/poky &
          git clone -b ${{ env.YOCTO_BRANCH }} --single-branch git://git.openembedded.org/meta-openembedded &
          git clone -b ${{ env.YOCTO_BRANCH }} --single-branch https://github.com/riscv/meta-riscv.git &
          git clone -b ${{ env.YOCTO_BRANCH }} --single-branch https://github.com/jwinarske/meta-drm.git &
          git clone -b ${{ env.YOCTO_BRANCH }} --single-branch https://github.com/jwinarske/meta-vulkan.git &
          wait

      - name: Configure build
        shell: bash
        working-directory: ../master-linux-dummy
        run: |
          rm -rf build/conf
          . ./poky/oe-init-build-env
          echo '***************************************'
          echo 'INHERIT += "rm_work"' >> ./conf/local.conf
          echo 'INHIBIT_PACKAGE_DEBUG_SPLIT = "1"' >> ./conf/local.conf
          echo '***************************************'
          sed -i '/MACHINE ??=/d' ./conf/local.conf
          echo "MACHINE ??= \"${{ env.MACHINE }}\"" >> ./conf/local.conf
          echo '***************************************'
          echo 'DL_DIR = "/home/dev/dl"' >> ./conf/local.conf
          echo 'SSTATE_DIR = "/home/dev/sstate"' >> ./conf/local.conf
          echo 'INIT_MANAGER = "systemd"' >> ./conf/local.conf
          echo '***************************************'
          echo 'DISTRO_FEATURES:remove = "sysvinit ptest pulseaudio"' >> ./conf/local.conf
          echo 'DISTRO_FEATURES:append = " systemd x11 wayland opengl polkit pipewire"' >> ./conf/local.conf
          echo 'DISTRO_FEATURES_BACKFILL_CONSIDERED = ""' >> ./conf/local.conf
          echo 'LICENSE_FLAGS_ACCEPTED += "commercial"' >> ./conf/local.conf
          echo 'PACKAGECONFIG:append:pn-ffmpeg = " openssl"' >> ./conf/local.conf
          echo 'PACKAGECONFIG:append:pn-flutter-auto = " filament-view"' >> ./conf/local.conf
          echo 'PACKAGECONFIG:append:pn-ivi-homescreen = " filament-view"' >> ./conf/local.conf
          echo '***************************************'
          echo 'IMAGE_INSTALL:append = " \
              ffmpeg \
              flatpak \
              "' >> ./conf/local.conf
          echo '********** ./conf/local.conf **********'
          cat ./conf/local.conf
          echo '***************************************'
          bitbake-layers show-layers
          bitbake-layers add-layer \
              ../meta-openembedded/meta-filesystems \
              ../meta-openembedded/meta-gnome \
              ../meta-openembedded/meta-multimedia \
              ../meta-openembedded/meta-networking \
              ../meta-openembedded/meta-oe \
              ../meta-openembedded/meta-python \
              ../meta-riscv \
              ../meta-drm \
              ../meta-vulkan \
              ../../meta-flutter \
              ../../meta-flutter/meta-flutter-apps
          bitbake-layers show-layers
          echo '***************************************'
          bitbake -e virtual/kernel | grep "^PV"
          bitbake -e virtual/kernel | grep "^PN"
          echo '***************************************'
          bitbake -e core-image-minimal | grep "^DISTRO_FEATURES"
          echo '***************************************'
          bitbake -e > bb.environment
          bitbake ca-certificates -c do_cleansstate
          bitbake ca-certificates-native -c do_cleansstate
          bitbake flutter-sdk-native -c do_cleansstate

      - name: Build dart-sdk
        shell: bash
        working-directory: ../master-linux-dummy
        run: |
          . ./poky/oe-init-build-env
          bitbake dart-sdk -c do_cleansstate
          bitbake dart-sdk

      - name: Build flutter-engine
        shell: bash
        working-directory: ../master-linux-dummy
        run: |
          . ./poky/oe-init-build-env
          bitbake flutter-engine -c do_cleansstate
          bitbake flutter-engine

      - name: Build ivi-homescreen
        shell: bash
        working-directory: ../master-linux-dummy
        run: |
          . ./poky/oe-init-build-env
          bitbake ivi-homescreen -c do_cleansstate
          bitbake ivi-homescreen

      - name: Build flutter-auto
        shell: bash
        working-directory: ../master-linux-dummy
        run: |
          . ./poky/oe-init-build-env
          bitbake flutter-auto -c do_cleansstate
          bitbake flutter-auto

      - name: Build flutter-pi
        shell: bash
        working-directory: ../master-linux-dummy
        run: |
          . ./poky/oe-init-build-env
          bitbake flutter-pi -c do_cleansstate
          bitbake flutter-pi

      - name: Build toyota-connected-tcna-packages-camera-linux-camera-example
        shell: bash
        working-directory: ../master-linux-dummy
        run: |
          . ./poky/oe-init-build-env
          bitbake toyota-connected-tcna-packages-camera-linux-camera-example -c do_cleansstate
          bitbake toyota-connected-tcna-packages-camera-linux-camera-example

      - name: Build toyota-connected-tcna-packages-filament-scene-fluorite-examples-demo
        shell: bash
        working-directory: ../master-linux-dummy
        run: |
          . ./poky/oe-init-build-env
          bitbake toyota-connected-tcna-packages-filament-scene-fluorite-examples-demo -c do_cleansstate
          bitbake toyota-connected-tcna-packages-filament-scene-fluorite-examples-demo

      - name: Build toyota-connected-tcna-packages-video-player-video-player-linux-video-player-example
        shell: bash
        working-directory: ../master-linux-dummy
        run: |
          . ./poky/oe-init-build-env
          bitbake toyota-connected-tcna-packages-video-player-video-player-linux-video-player-example -c do_cleansstate
          bitbake toyota-connected-tcna-packages-video-player-video-player-linux-video-player-example
