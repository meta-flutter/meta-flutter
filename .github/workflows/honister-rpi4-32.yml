name: honister-rpi4-32

on:
  pull_request:
    types: [ opened, synchronize, reopened, closed ]
  release:
    types: [ published, created, edited ]
  workflow_dispatch:
  schedule:
    # daily
    - cron:  '0 0 * * *'

jobs:

  honister-rpi4-drm:
  
    env:
      DISTRO_VERSION: 3.4.2
      YOCTO_BRANCH: honister
      MACHINE: raspberrypi4
      
    runs-on: [self-hosted, linux]
    
    container:
      image: ghcr.io/meta-flutter/ubuntu-20-dev:main
      options:
        --user 1018
        --storage-opt overlay.mount_program=/usr/bin/fuse-overlayfs
        --storage-opt overlay.mountopt=nodev,metacopy=on,noxattrs=1
        -v /mnt/raid10/github-ci/download:/home/dev/dl:Z
        -v /mnt/raid10/github-ci/sstate/yocto/honister/rpi4-32-drm/latest:/home/dev/sstate:Z
        -v /mnt/raid10/github-ci/artifacts/rpi4-32/drm:/home/dev/artifacts:Z


    steps:
    
      - name: Display UID Info
        run: |
          whoami
          id -u
          
      - name: Set Ownership
        run: |
          chown -R dev:dev $HOME .
          
      - uses: actions/checkout@v3
        with:
          path: ''

      - name: Fetch poky
        run: |
          [ -d ../rpi4-32-drm-honister-latest ] || mkdir -p ../rpi4-32-drm-honister-latest
          cd ../rpi4-32-drm-honister-latest
          rm -rf sources || true
          ls -la
          git config --list
          git config --global user.email joel@winarske@gmail.com
          git config --global user.name "Joel Winarske"
          git config --list
          /home/dev/bin/repo init -u https://github.com/jwinarske/manifests.git -m rpi64.xml -b $YOCTO_BRANCH
          /home/dev/bin/repo sync --force-sync --no-clone-bundle -j `grep -c ^processor /proc/cpuinfo` &
          wait
          cd sources/poky
          git checkout honister-3.4.2
          git apply ../../conf/rpi64/0001-mesa-broadcom-vulkan.patch

      - name: Configure build
        shell: bash
        working-directory: ../rpi4-32-drm-honister-latest
        run: |
          rm -rf ${{ env.MACHINE }}/conf || true
          . ./setup-environment ${{ env.MACHINE }}
          echo '***************************************'
          echo -e 'DL_DIR = "/home/dev/dl"' >> ./conf/local.conf
          echo -e 'SSTATE_DIR = "/home/dev/sstate"' >> ./conf/local.conf
          echo -e 'SSTATE_MIRRORS = "file://.* file:///home/dev/sstate/PATH"' >> ./conf/local.conf
          echo -e 'SSTATE_MIRRORS += "file://.* http://sstate.yoctoproject.org/${{ env.DISTRO_VERSION }}/PATH;downloadfilename=PATH"' >> ./conf/local.conf
          echo -e 'CORE_IMAGE_EXTRA_INSTALL:append = " tzdata"' >> ./conf/local.conf
          echo -e 'IMAGE_LINGUAS = "en-us"' >> ./conf/local.conf
          echo -e 'PACKAGECONFIG:pn-sascha-samples = "d2d"' >> ./conf/local.conf
          echo -e 'PACKAGECONFIG:pn-vkcube = "kms wayland"' >> ./conf/local.conf
          echo -e 'PREFERRED_PROVIDER:jpeg = "libjpeg-turbo"' >> ./conf/local.conf
          echo -e 'PREFERRED_PROVIDER:jpeg-native = "libjpeg-turbo-native"' >> ./conf/local.conf
          echo -e '' >> ./conf/local.conf
          echo -e 'PREFERRED_VERSION:vulkan-headers = "1.2.198.0"' >> ./conf/local.conf
          echo -e 'PREFERRED_VERSION:vulkan-loader = "1.2.198.1"' >> ./conf/local.conf
          echo -e 'PREFERRED_VERSION:vulkan-tools = "1.2.198.0"' >> ./conf/local.conf
          echo -e 'PREFERRED_VERSION:glslang = "11.6.0"' >> ./conf/local.conf
          echo -e 'PREFERRED_VERSION:vulkan-validationlayers = "1.2.198"' >> ./conf/local.conf
          echo '********** ./conf/local.conf **********'
          cat ./conf/local.conf
          echo '***************************************'
          bitbake-layers remove-layer meta-flutter
          bitbake-layers add-layer ../../meta-flutter
          bitbake-layers show-layers
          echo '***************************************'
          bitbake -e virtual/kernel | grep "^PV"
          bitbake -e virtual/kernel | grep "^PN"
          echo '***************************************'
          bitbake -e core-image-minimal | grep "^DISTRO_FEATURES"
          echo '***************************************'
          bitbake -e > bb.environment

      - name: Build core-image-minimal
        shell: bash
        working-directory: ../rpi4-32-drm-honister-latest
        run: |
          . ./sources/poky/oe-init-build-env ${{ env.MACHINE }}
          bitbake core-image-minimal

      - name: Build swiftshader
        shell: bash
        working-directory: ../rpi4-32-drm-honister-latest
        run: |
          . ./sources/poky/oe-init-build-env ${{ env.MACHINE }}
          bitbake swiftshader
          rm -rf /home/dev/artifacts/*
          cp tmp/deploy/rpm/cortexa7t2hf_neon_vfpv4/swiftshader-git-*.rpm /home/dev/artifacts

      - name: Publish swiftshader artifacts
        uses: actions/upload-artifact@v2
        with:
          name: swiftshader-rpi4-32
          path: |
             /home/dev/artifacts/*.rpm

      - name: Build vkmark
        shell: bash
        working-directory: ../rpi4-32-drm-honister-latest
        run: |
          . ./sources/poky/oe-init-build-env ${{ env.MACHINE }}
          bitbake vkmark
          rm -rf /home/dev/artifacts/*
          cp tmp/deploy/rpm/cortexa7t2hf_neon_vfpv4/vkmark-git-*.rpm /home/dev/artifacts

      - name: Publish vkmark artifacts
        uses: actions/upload-artifact@v2
        with:
          name: vkmark-rpi4-32
          path: |
             /home/dev/artifacts/*.rpm

      - name: Build vkcube
        shell: bash
        working-directory: ../rpi4-32-drm-honister-latest
        run: |
          . ./sources/poky/oe-init-build-env ${{ env.MACHINE }}
          bitbake vkcube
          rm -rf /home/dev/artifacts/*
          cp tmp/deploy/rpm/cortexa7t2hf_neon_vfpv4/vkcube-git*.rpm /home/dev/artifacts

      - name: Publish vkcube artifacts
        uses: actions/upload-artifact@v2
        with:
          name: vkcube-rpi4-64
          path: |
             /home/dev/artifacts/*.rpm

      - name: Build vkquake3
        shell: bash
        working-directory: ../rpi4-32-drm-honister-latest
        run: |
          . ./sources/poky/oe-init-build-env ${{ env.MACHINE }}
          bitbake vkquake3
          rm -rf /home/dev/artifacts/*
          cp tmp/deploy/rpm/cortexa7t2hf_neon_vfpv4/vkquake3-git*.rpm /home/dev/artifacts

      - name: Publish vkquake3 artifacts
        uses: actions/upload-artifact@v2
        with:
          name: vkquake3-rpi4-64
          path: |
             /home/dev/artifacts/*.rpm

      - name: Build vkrunner
        shell: bash
        working-directory: ../rpi4-32-drm-honister-latest
        run: |
          . ./sources/poky/oe-init-build-env ${{ env.MACHINE }}
          bitbake vkrunner
          rm -rf /home/dev/artifacts/*
          cp tmp/deploy/rpm/cortexa7t2hf_neon_vfpv4/vkrunner-git*.rpm /home/dev/artifacts

      - name: Publish vkrunner artifacts
        uses: actions/upload-artifact@v2
        with:
          name: vkrunner-rpi4-64
          path: |
             /home/dev/artifacts/*.rpm

      - name: Build vk-layer-perfdoc
        shell: bash
        working-directory: ../rpi4-32-drm-honister-latest
        run: |
          . ./sources/poky/oe-init-build-env ${{ env.MACHINE }}
          bitbake vk-layer-perfdoc
          rm -rf /home/dev/artifacts/*
          cp tmp/deploy/rpm/cortexa7t2hf_neon_vfpv4/vk-layer-perfdoc-git*.rpm /home/dev/artifacts

      - name: Publish vk-layer-perfdoc artifacts
        uses: actions/upload-artifact@v2
        with:
          name: vk-layer-perfdoc-rpi4-64
          path: |
             /home/dev/artifacts/*.rpm

      - name: Build sascha-samples (D2D)
        shell: bash
        working-directory: ../rpi4-32-drm-honister-latest
        run: |
          . ./sources/poky/oe-init-build-env ${{ env.MACHINE }}
          bitbake sascha-samples
          rm -rf /home/dev/artifacts/*
          cp tmp/deploy/rpm/cortexa7t2hf_neon_vfpv4/sascha-samples-git*.rpm /home/dev/artifacts

      - name: Publish sascha-samples artifacts
        uses: actions/upload-artifact@v2
        with:
          name: sascha-samples-d2d-rpi4
          path: |
             /home/dev/artifacts/*.rpm

      - name: Build flutter-engine-runtimerelease
        shell: bash
        working-directory: ../rpi4-32-drm-honister-latest
        run: |
          . ./sources/poky/oe-init-build-env ${{ env.MACHINE }}
          bitbake flutter-engine-runtimerelease -c do_cleansstate
          bitbake flutter-engine-runtimerelease
          rm -rf /home/dev/artifacts/*
          cp tmp/deploy/rpm/cortexa7t2hf_neon_vfpv4/flutter-engine-runtimerelease-git*.rpm /home/dev/artifacts

      - name: Publish flutter-engine-runtimerelease artifacts
        uses: actions/upload-artifact@v2
        with:
          name: flutter-engine-runtimerelease-rpi4
          path: |
             /home/dev/artifacts/*.rpm

      - name: Build flutter-pi-runtimerelease
        shell: bash
        working-directory: ../rpi4-32-drm-honister-latest
        run: |
          . ./sources/poky/oe-init-build-env ${{ env.MACHINE }}
          bitbake flutter-pi-runtimerelease
          rm -rf /home/dev/artifacts/*
          cp tmp/deploy/rpm/cortexa7t2hf_neon_vfpv4/flutter-pi-runtimerelease-git*.rpm /home/dev/artifacts

      - name: Publish flutter-pi-runtimerelease artifacts
        uses: actions/upload-artifact@v2
        with:
          name: flutter-pi-runtimerelease-rpi4
          path: |
             /home/dev/artifacts/*.rpm

      - name: Build flutter-gallery-runtimerelease
        shell: bash
        working-directory: ../rpi4-32-drm-honister-latest
        run: |
          . ./sources/poky/oe-init-build-env ${{ env.MACHINE }}
          bitbake flutter-sdk-native -c do_cleansstate
          bitbake flutter-gallery-runtimerelease -c do_cleansstate
          bitbake flutter-gallery-runtimerelease
          rm -rf /home/dev/artifacts/*
          cp tmp/deploy/rpm/cortexa7t2hf_neon_vfpv4/flutter-gallery-runtimerelease-git*.rpm /home/dev/artifacts

      - name: Publish flutter-gallery-runtimerelease artifacts
        uses: actions/upload-artifact@v2
        with:
          name: flutter-gallery-runtimerelease-rpi4
          path: |
             /home/dev/artifacts/*.rpm

      - name: Build core-image-minimal
        shell: bash
        working-directory: ../rpi4-32-drm-honister-latest
        run: |
          . ./sources/poky/oe-init-build-env ${{ env.MACHINE }}
          echo 'CORE_IMAGE_EXTRA_INSTALL:append = " \
              flutter-pi-runtimerelease \
              flutter-gallery-runtimerelease \
              swiftshader \
              sascha-samples \
              vkcube \
              vkmark \
              vkquake3 \
              vkrunner \
              vk-layer-perfdoc \
              gstreamer1.0-libav \
              gstreamer1.0-plugins-bad \
              gstreamer1.0-plugins-good \
              gstreamer1.0-plugins-ugly \
              "' >> ./conf/local.conf
          bitbake core-image-minimal
          rm -rf /home/dev/artifacts/*
          cp bb.environment /home/dev/artifacts
          cp tmp/deploy/images/raspberrypi4/core-image-minimal-raspberrypi4.wic.bmap /home/dev/artifacts
          cp tmp/deploy/images/raspberrypi4/core-image-minimal-raspberrypi4.wic.bz2 /home/dev/artifacts

      - name: Publish SD card image artifact
        uses: actions/upload-artifact@v2
        with:
          name: rpi4-drm-flutter-runtimerelease-honister-sdimage
          path: |
             /home/dev/artifacts/*
