name: kirkstone-rockchip-rk3328

on:
  pull_request:
    types: [ opened, synchronize, reopened, closed ]
  release:
    types: [ published, created, edited ]
  workflow_dispatch:
  schedule:
    # daily
    - cron:  '0 0 * * *'

jobs:

  weston:

    env:
      YOCTO_BRANCH: "kirkstone"
      MACHINE: rockchip-rk3328-evb
      IMAGE: core-image-minimal

    runs-on: [self-hosted, linux]

    container:
      image: ghcr.io/meta-flutter/ubuntu-20-dev:main
      options:
        --user 1018
        --storage-opt overlay.mount_program=/usr/bin/fuse-overlayfs
        --storage-opt overlay.mountopt=nodev,metacopy=on,noxattrs=1
        -v /mnt/raid10/github-ci/download:/home/dev/dl:Z
        -v /mnt/raid10/github-ci/sstate/yocto/kirkstone/rockchip:/home/dev/sstate:Z
        -v /mnt/raid10/github-ci/artifacts/rockchip:/home/dev/artifacts:Z

    steps:
    
      - name: Display UID Info
        run: |
          whoami
          id -u
          
      - name: Set Ownership
        run: |
          chown -R dev:dev $HOME .
          
      - uses: actions/checkout@v3
        with:
          path: ''

      - name: Fetch poky
        run: |
          [ -d ../kirkstone-rockchip-rk3328 ] || mkdir -p ../kirkstone-rockchip-rk3328
          cd ../kirkstone-rockchip-rk3328
          rm -rf poky meta-openembedded meta-clang meta-rockchip meta-security meta-selinux meta-flutter-vm
          git clone -b ${{ env.YOCTO_BRANCH }} --single-branch git://git.yoctoproject.org/poky &
          git clone -b ${{ env.YOCTO_BRANCH }} --single-branch git://git.openembedded.org/meta-openembedded &
          git clone -b ${{ env.YOCTO_BRANCH }} --single-branch https://github.com/kraj/meta-clang.git &
          git clone -b ${{ env.YOCTO_BRANCH }} --single-branch https://github.com/JeffyCN/meta-rockchip.git &
          git clone -b ${{ env.YOCTO_BRANCH }} --single-branch https://git.yoctoproject.org/git/meta-security.git &
          git clone -b ${{ env.YOCTO_BRANCH }} --single-branch https://git.yoctoproject.org/git/meta-selinux.git &
          git clone -b ${{ env.YOCTO_BRANCH }} --single-branch https://github.com/meta-flutter/meta-flutter-vm.git &
          wait

      - name: Configure build
        shell: bash
        working-directory: ../kirkstone-rockchip-rk3328
        run: |
          rm -rf ${{ env.MACHINE }}/conf || true
          . ./poky/oe-init-build-env ${{ env.MACHINE }}
          echo '***************************************'
          echo 'DL_DIR = "/home/dev/dl"' >> ./conf/local.conf
          echo 'SSTATE_DIR = "/home/dev/sstate"' >> ./conf/local.conf
          echo 'SSTATE_MIRRORS = "file://.* file:///home/dev/sstate/PATH"' >> ./conf/local.conf
          echo 'ENABLE_BINARY_LOCALE_GENERATION = "1"' >> ./conf/local.conf
          echo 'GLIBC_GENERATE_LOCALES:append = " en_US.UTF-8 es_US.UTF-8 en_GB.UTF-8"' >> ./conf/local.conf
          echo 'IMAGE_LINGUAS:append = " en-us en-gb es-us"' >> ./conf/local.conf
          echo 'DEFAULT_TIMEZONE = "America/Los_Angeles"' >> ./conf/local.conf
          echo 'IMAGE_INSTALL:append = "\
              dart-sdk \
              default-language-en-us-utf8 \
              tzdata-americas \
              tzdata-core \
              flutter-auto \
              flutter-pi \
              packagegroup-flutter-test-apps \
              gstreamer1.0 \
              gstreamer1.0-libav \
              gstreamer1.0-plugins-bad \
              gstreamer1.0-plugins-base \
              gstreamer1.0-plugins-good \
              gstreamer1.0-plugins-ugly \
              ffmpeg \
              "' >> ./conf/local.conf
          echo 'LICENSE_FLAGS_ACCEPTED += " commercial"' >> ./conf/local.conf
          echo 'PACKAGECONFIG:append:pn-ffmpeg = " openssl"' >> ./conf/local.conf
          echo 'PACKAGECONFIG:append:pn-weston = " remoting"' >> ./conf/local.conf
          echo 'PACKAGECONFIG:append:pn-flutter-auto = " gstreamer"' >> conf/local.conf
          echo 'PACKAGECONFIG:append:pn-flutter-engine = " profile debug"' >> conf/local.conf
          echo 'RUST_PANIC_STRATEGY = "abort"' >> conf/local.conf
          echo '********** ./conf/local.conf **********'
          cat ./conf/local.conf
          echo '***************************************'
          bitbake-layers show-layers
          bitbake-layers add-layer \
            ../poky/meta \
            ../meta-rockchip \
            ../meta-openembedded/meta-filesystems \
            ../meta-openembedded/meta-oe \
            ../meta-openembedded/meta-multimedia \
            ../meta-openembedded/meta-networking \
            ../meta-openembedded/meta-python \
            ../meta-openembedded/meta-perl \
            ../meta-security \
            ../meta-selinux \
            ../meta-clang \
            ../meta-flutter-vm \
            ../../meta-flutter
          bitbake-layers show-layers
          echo '***************************************'
          bitbake -e virtual/kernel | grep "^PV"
          bitbake -e virtual/kernel | grep "^PN"
          echo '***************************************'
          bitbake -e ${{ env.IMAGE }} | grep "^DISTRO_FEATURES"
          bitbake -e ${{ env.IMAGE }} | grep "^IMAGE_FEATURES"
          echo '***************************************'
          bitbake -e > bb.environment
          bitbake -c do_cleansstate flutter-engine
          bitbake -c do_cleansstate flutter-gallery
          bitbake -c do_cleansstate flutter-test-plugins
          bitbake -c do_cleansstate flutter-test-secure-storage
          bitbake -c do_cleansstate flutter-test-texture-egl
          bitbake -c do_cleansstate flutter-test-video-player
          bitbake -c do_cleansstate flutter-test-localization
          bitbake -c do_cleansstate flutter-test-membrane
          bitbake -c do_cleansstate membrane-example
          bitbake -c do_cleansstate membrane-example-native
          bitbake -c do_cleansstate flutter-test-membrane
          bitbake -c do_cleansstate flutter-rust-bridge-example
          bitbake -c do_cleansstate flutter-test-frb

      - name: Build core-image-minimal
        shell: bash
        working-directory: ../kirkstone-rockchip-rk3328
        run: |
          . ./poky/oe-init-build-env ${{ env.MACHINE }}
          bitbake ${{ env.IMAGE }}
          rm -rf /home/dev/artifacts/*
          cp bb.environment /home/dev/artifacts
          cp tmp/deploy/images/${{ env.MACHINE }}/${{ env.IMAGE }}-${{ env.MACHINE }}.wic.bmap /home/dev/artifacts
          cp tmp/deploy/images/${{ env.MACHINE }}/${{ env.IMAGE }}-${{ env.MACHINE }}.wic.bz2 /home/dev/artifacts

      - name: Publish SD card image artifact
        uses: actions/upload-artifact@v3
        with:
          name: rockchip-rk3328-evb-sdimage
          path: |
             /home/dev/artifacts/*
