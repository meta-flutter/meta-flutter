name: kirkstone-rpi4-64-vulkan

on:
  pull_request:
    types: [ opened, synchronize, reopened, closed ]
  release:
    types: [ published, created, edited ]
  workflow_dispatch:
  schedule:
    # daily
    - cron:  '0 0 * * *'

jobs:

  weston:
  
    env:
      YOCTO_BRANCH: "kirkstone"
      MACHINE: raspberrypi4-64
      
    runs-on: [self-hosted, linux]
    
    container:
      image: ghcr.io/meta-flutter/ubuntu-20-dev:main
      options:
        --user 1001
        --storage-opt overlay.mount_program=/usr/bin/fuse-overlayfs
        --storage-opt overlay.mountopt=nodev,metacopy=on,noxattrs=1
        -v /mnt/raid10/github-ci/download:/home/dev/dl:Z
        -v /mnt/raid10/github-ci/sstate/yocto/kirkstone/zero2w-drm/latest:/home/dev/sstate:Z
        -v /mnt/raid10/github-ci/artifacts/zero2w/drm:/home/dev/artifacts:Z

    steps:
    
      - name: Display UID Info
        run: |
          whoami
          id -u
          
      - name: Set Ownership
        run: |
          chown -R dev:dev $HOME .
          
      - uses: actions/checkout@v3
        with:
          path: ''

      - name: Fetch poky
        run: |
          [ -d ../rpi4-64-vulkan-kirkstone ] || mkdir -p ../rpi4-64-vulkan-kirkstone
          cd ../rpi4-64-vulkan-kirkstone
          rm -rf poky meta-openembedded meta-clang meta-raspberrypi meta-security meta-selinux meta-flutter-rpi meta-vulkan
          git clone -b ${{ env.YOCTO_BRANCH }} --single-branch git://git.yoctoproject.org/poky &
          git clone -b ${{ env.YOCTO_BRANCH }} --single-branch git://git.openembedded.org/meta-openembedded &
          git clone -b ${{ env.YOCTO_BRANCH }} --single-branch https://github.com/kraj/meta-clang.git &
          git clone -b jw/rpi4_kvm             --single-branch https://github.com/meta-flutter/meta-raspberrypi.git &
          git clone -b ${{ env.YOCTO_BRANCH }} --single-branch https://git.yoctoproject.org/git/meta-security.git &
          git clone -b ${{ env.YOCTO_BRANCH }} --single-branch https://git.yoctoproject.org/git/meta-selinux.git &
          git clone -b ${{ env.YOCTO_BRANCH }} --single-branch https://git.yoctoproject.org/git/meta-virtualization.git &
          git clone -b ${{ env.YOCTO_BRANCH }} --single-branch https://github.com/meta-flutter/meta-flutter-vm.git &
          git clone -b ${{ env.YOCTO_BRANCH }} --single-branch https://github.com/meta-flutter/meta-flutter-rpi.git &
          git clone -b ${{ env.YOCTO_BRANCH }} --single-branch https://github.com/jwinarske/meta-vulkan.git &
          wait

      - name: Configure build
        shell: bash
        working-directory: ../rpi4-64-vulkan-kirkstone
        run: |
          rm -rf ${{ env.MACHINE }}/conf || true
          source ./poky/oe-init-build-env ${{ env.MACHINE }}
          echo '***************************************'
          sed -i "s|MACHINE ??= \"qemux86-64\"|MACHINE ?= \"${{ env.MACHINE }}\"|g" conf/local.conf
          echo 'DL_DIR = "/home/dev/dl"' >> ./conf/local.conf
          echo 'SSTATE_DIR = "/home/dev/sstate"' >> ./conf/local.conf
          echo 'SSTATE_MIRRORS = "file://.* file:///home/dev/sstate/PATH"' >> ./conf/local.conf
          #
          # Localization
          #
          echo 'DEFAULT_TIMEZONE = "America/Los_Angeles"' >> ./conf/local.conf
          echo 'ENABLE_BINARY_LOCALE_GENERATION = "1"' >> ./conf/local.conf
          echo 'IMAGE_LINGUAS:append = " en-us en-gb es-us"' >> ./conf/local.conf
          echo 'GLIBC_GENERATE_LOCALES:append = " en_US.UTF-8 es_US.UTF-8 en_GB.UTF-8"' >> ./conf/local.conf
          echo 'IMAGE_INSTALL:append = "\
              tzdata-core \
              tzdata-americas \
              "' >> ./conf/local.conf
          #
          # Baseline
          #
          echo 'DISTRO_FEATURES:append = " systemd alsa wifi bluetooth usbhost"' >> ./conf/local.conf
          echo 'DISTRO_FEATURES:remove = "sysvinit x11 usbgadget ptest xen"' >> ./conf/local.conf
          echo 'COMBINED_FEATURES += "alsa "' >> ./conf/local.conf
          echo 'INIT_MANAGER = "systemd"' >> ./conf/local.conf
          #
          # Wayland
          #
          echo 'DISTRO_FEATURES:append = " opengl wayland pam"' >> ./conf/local.conf
          echo 'PACKAGECONFIG:append:pn-weston = " remoting"' >> ./conf/local.conf
          #
          # Vulkan
          #
          echo 'DISTRO_FEATURES:append = " vulkan"' >> ./conf/local.conf
          echo 'IMAGE_INSTALL:append = "\
              comp-surf-pbr \
              filament-samples-vk \
              sascha-samples \
              vkcube \
              vkrunner \
              vulkan-tools \
              "' >> ./conf/local.conf
          #
          # SELinux
          #
          # echo 'DISTRO_FEATURES:append = " acl xattr pam selinux audit"' >> ./conf/local.conf
          # echo 'PREFERRED_PROVIDER_virtual/refpolicy = "refpolicy-mls"' >> ./conf/local.conf
          #
          # SECCOMP
          #
          # echo 'DISTRO_FEATURES:append = " security seccomp"' >> ./conf/local.conf
          #
          # Virtualization
          #
          echo 'DISTRO_FEATURES:append = " virtualization kvm"' >> ./conf/local.conf
          echo 'RUST_PANIC_STRATEGY = "abort"' >> ./conf/local.conf
          echo 'IMAGE_INSTALL:append = "\
              kvmtool dmidecode \
              libvirt libvirt-libvirtd libvirt-virsh \
              crosvm crosvm-direct crosvm-plugin \
              firecracker jailer curl \
              "' >> ./conf/local.conf
          #
          # Flutter
          #
          echo 'PACKAGECONFIG:append:pn-flutter-engine = " profile debug"' >> conf/local.conf
          echo 'IMAGE_INSTALL:append = "\
              dart-sdk \
              flutter-auto \
              packagegroup-flutter-test-apps \
              "' >> ./conf/local.conf
          #
          #
          #
          echo 'LINUX_KERNEL_TYPE = "preempt-rt"' >> ./conf/local.conf
          echo 'CMDLINE_DEBUG = "quiet"' >> ./conf/local.conf
          echo 'GPU_MEM = "128"' >> ./conf/local.conf
          echo 'DISPMANX_OFFLINE = "1"' >> ./conf/local.conf
          echo 'DISABLE_OVERSCAN = "1"' >> ./conf/local.conf
          echo 'DISABLE_RPI_BOOT_LOGO = "1"' >> ./conf/local.conf
          echo 'DISABLE_SPLASH = "1"' >> ./conf/local.conf
          echo 'IMAGE_FEATURES:remove = "splash"' >> ./conf/local.conf
          echo 'ENABLE_SPI_BUS = "1"' >> ./conf/local.conf
          echo 'ENABLE_I2C = "1"' >> ./conf/local.conf
          echo 'KERNEL_MODULE_AUTOLOAD:rpi:append = " i2c-dev i2c-bcm2708"' >> ./conf/local.conf
          # ENABLE_UART = "1"' >> ./conf/local.conf
          # SERIAL_CONSOLES = "115200;ttyAMA0"' >> ./conf/local.conf
          echo 'PREFERRED_PROVIDER_jpeg = "libjpeg-turbo"' >> ./conf/local.conf
          echo 'PREFERRED_PROVIDER_jpeg-native = "libjpeg-turbo-native"' >> ./conf/local.conf
          echo '********** ./conf/local.conf **********'
          cat ./conf/local.conf
          echo '***************************************'
          bitbake-layers show-layers
          bitbake-layers add-layer \
          ../poky/meta \
          ../meta-raspberrypi \
          ../meta-openembedded/meta-filesystems \
          ../meta-openembedded/meta-oe \
          ../meta-openembedded/meta-multimedia \
          ../meta-openembedded/meta-networking \
          ../meta-openembedded/meta-python \
          ../meta-openembedded/meta-perl \
          ../meta-security \
          ../meta-selinux \
          ../meta-virtualization \
          ../meta-flutter-vm \
          ../meta-clang \
          ../meta-flutter-rpi \
          ../meta-vulkan \
          ../../meta-flutter
          bitbake-layers show-layers
          echo '***************************************'
          bitbake -e virtual/kernel | grep "^PV"
          bitbake -e virtual/kernel | grep "^PN"
          echo '***************************************'
          bitbake -e virtual/kernel | grep "^KERNEL_FEATURES"
          echo '***************************************'
          echo '* rpi-image-flutter-wayland'
          echo '***************************************'
          bitbake -e rpi-image-flutter-wayland | grep "^DISTRO_FEATURES"
          echo '***************************************'
          bitbake -e rpi-image-flutter-wayland | grep "^IMAGE_FEATURES"
          echo '***************************************'
          bitbake -e > bb.environment
          bitbake -c do_cleansstate flutter-engine
          bitbake -c do_cleansstate flutter-sdk-native
          bitbake -c do_cleansstate packagegroup-flutter-test-apps
          bitbake -c do_cleansstate sascha-samples
          bitbake -c do_cleansstate flutter-test-animated-background

      - name: Build rpi-image-weston-flutter
        shell: bash
        working-directory: ../rpi4-64-vulkan-kirkstone
        run: |
          . ./poky/oe-init-build-env ${{ env.MACHINE }}
          bitbake rpi-image-flutter-wayland
          rm -rf /home/dev/artifacts/*
          cp bb.environment /home/dev/artifacts
          cp tmp/deploy/images/${{ env.MACHINE }}/rpi-image-flutter-wayland-${{ env.MACHINE }}.wic.bmap /home/dev/artifacts
          cp tmp/deploy/images/${{ env.MACHINE }}/rpi-image-flutter-wayland-${{ env.MACHINE }}.wic.bz2 /home/dev/artifacts

      - name: Publish SD card image artifact
        uses: actions/upload-artifact@v3
        with:
          name: raspberrypi4-64-weston-flutter-vulkan-sdimage
          path: |
             /home/dev/artifacts/*
