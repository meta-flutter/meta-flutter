name: dunfell-linux-dummy

on:
  pull_request:
    types: [ opened, synchronize, reopened, closed ]
  release:
    types: [ published, created, edited ]
  workflow_dispatch:
  schedule:
    # daily
    - cron:  '0 0 * * *'

jobs:

  linux-dummy:
  
    env:
      YOCTO_VERSION: 3.1.12
      YOCTO_BRANCH: dunfell
      
    runs-on: [self-hosted, linux]
    
    container:
      image: ghcr.io/meta-flutter/ubuntu-20-dev:main
      options:
        --user 1018
        --storage-opt overlay.mount_program=/usr/bin/fuse-overlayfs
        --storage-opt overlay.mountopt=nodev,metacopy=on,noxattrs=1
        -v /b/github-ci/download:/home/dev/dl:Z
        -v /b/github-ci/sstate/yocto/dunfell/latest:/home/dev/sstate:Z

    steps:
    
      - name: Display UID Info
        run: |
          whoami
          id -u
          
      - name: Set Ownership
        run: |
          chown -R dev:dev $HOME .
          
      - uses: actions/checkout@v2

      - name: Fetch poky
        run: |
          [ -d ../yocto-dunfell ] || mkdir -p ../yocto-dunfell
          cd ../yocto-dunfell
          pwd
          ls -la
          rm -rf poky meta-openembedded meta-clang
          git clone -b ${{ env.YOCTO_BRANCH }} --single-branch git://git.yoctoproject.org/poky &
          git clone -b ${{ env.YOCTO_BRANCH }} --single-branch git://git.openembedded.org/meta-openembedded &
          git clone -b ${{ env.YOCTO_BRANCH }} --single-branch https://github.com/kraj/meta-clang.git &
          wait

      - name: Configure build
        shell: bash
        working-directory: ../yocto-dunfell/poky
        run: |
          . ./oe-init-build-env
          echo '***************************************'
          sed -i '/rm_work/d' ./conf/local.conf
          sed -i '/DL_DIR/d' ./conf/local.conf
          sed -i '/SSTATE_DIR/d' ./conf/local.conf
          sed -i '/SSTATE_MIRRORS/d' ./conf/local.conf
          sed -i '/INIT_MANAGER/d' ./conf/local.conf
          sed -i '/DISTRO_FEATURES/d' ./conf/local.conf
          sed -i '/VIRTUAL-RUNTIME/d' ./conf/local.conf
          sed -i '/PREFERRED_PROVIDER/d' ./conf/local.conf
          sed -i '/IMAGE_INSTALL/d' ./conf/local.conf
          sed -i '/FLUTTER_CHANNEL/d' ./conf/local.conf
          sed -i '/PACKAGECONFIG_pn-flutter-engine/d' ./conf/local.conf
          echo '***************************************'
          echo 'INHERIT += "rm_work"' >> ./conf/local.conf
          echo 'DL_DIR = "/home/dev/dl"' >> ./conf/local.conf
          echo 'SSTATE_DIR = "/home/dev/sstate"' >> ./conf/local.conf
          echo 'SSTATE_MIRRORS = "file://.* file:///home/dev/sstate/PATH"' >> ./conf/local.conf
          echo 'SSTATE_MIRRORS += "file://.* http://sstate.yoctoproject.org/${{ env.YOCTO_VERSION }}/PATH;downloadfilename=PATH"' >> ./conf/local.conf
          echo 'INIT_MANAGER = "systemd"' >> ./conf/local.conf
          echo 'DISTRO_FEATURES_remove = " sysvinit x11"' >> ./conf/local.conf
          echo 'DISTRO_FEATURES += "wayland opengl systemd"' >> ./conf/local.conf
          echo 'DISTRO_FEATURES_BACKFILL_CONSIDERED = ""' >> ./conf/local.conf
          echo 'VIRTUAL-RUNTIME_init_manager = "systemd"' >> ./conf/local.conf
          echo 'VIRTUAL-RUNTIME_initscripts = ""' >> ./conf/local.conf
          echo 'PREFERRED_PROVIDER_virtual/kernel = "linux-dummy"' >> ./conf/local.conf
          echo 'FLUTTER_CHANNEL = "dev"' >> ./conf/local.conf
          echo 'PACKAGECONFIG_pn-flutter-engine = "embedder-for-target disable-desktop-embeddings fontconfig mode-debug"' >> ./conf/local.conf
          echo '********** ./conf/local.conf **********'
          cat ./conf/local.conf
          echo '***************************************'
          bitbake-layers add-layer ../../meta-openembedded/meta-oe ../../meta-clang ../../../meta-flutter
          bitbake-layers show-layers
          echo '***************************************'
          bitbake -e virtual/kernel | grep "^PV"
          bitbake -e virtual/kernel | grep "^PN"
          echo '***************************************'
          bitbake -e > bb.environment


      - name: Build core-image-minimal
        shell: bash
        working-directory: ../yocto-dunfell/poky
        run: |
          . ./oe-init-build-env
          bitbake core-image-minimal

      - name: Build flutter-engine
        shell: bash
        working-directory: ../yocto-dunfell/poky
        run: |
          . ./oe-init-build-env
          bitbake flutter-engine -c do_cleansstate
          bitbake flutter-engine

      - name: Build flutter-gallery
        shell: bash
        working-directory: ../yocto-dunfell/poky
        run: |
          . ./oe-init-build-env
          bitbake flutter-sdk-native -c do_cleansstate
          bitbake flutter-gallery -c do_cleansstate
          bitbake flutter-gallery

      - name: Build ivi-homescreen
        shell: bash
        working-directory: ../yocto-dunfell/poky
        run: |
          . ./oe-init-build-env
          bitbake ivi-homescreen -c do_cleansstate
          bitbake ivi-homescreen

      - name: Build flutter-pi
        shell: bash
        working-directory: ../yocto-dunfell/poky
        run: |
          . ./oe-init-build-env
          bitbake flutter-pi -c do_cleansstate
          bitbake flutter-pi

      - name: Build drm gbm backend (Sony)
        shell: bash
        working-directory: ../yocto-dunfell/poky
        run: |
          . ./oe-init-build-env
          bitbake flutter-drm-gbm-backend -c do_cleansstate
          bitbake flutter-drm-gbm-backend

      - name: Build external texture plugin (Sony)
        shell: bash
        working-directory: ../yocto-dunfell/poky
        run: |
          . ./oe-init-build-env
          bitbake flutter-external-texture-plugin -c do_cleansstate
          bitbake flutter-external-texture-plugin

      - name: Build video player plugin (Sony)
        shell: bash
        working-directory: ../yocto-dunfell/poky
        run: |
          . ./oe-init-build-env
          bitbake flutter-video-player-plugin -c do_cleansstate
          bitbake flutter-video-player-plugin

      - name: Build Wayland Client (Sony)
        shell: bash
        working-directory: ../yocto-dunfell/poky
        run: |
          . ./oe-init-build-env
          bitbake flutter-wayland-client -c do_cleansstate
          bitbake flutter-wayland-client
