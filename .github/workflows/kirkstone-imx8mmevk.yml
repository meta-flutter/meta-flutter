name: kirkstone-imx8mmevk

on:
  pull_request:
    types: [ opened, synchronize, reopened, closed ]
  release:
    types: [ published, created, edited ]
  workflow_dispatch:
  schedule:
    # daily
    - cron:  '0 0 * * *'

jobs:

  kirkstone-fsl-wayland:
  
    env:
      YOCTO_BRANCH: "kirkstone"
      MACHINE: imx8mmevk
      DISTRO: fsl-imx-wayland
      IMAGE: imx-image-core
      
    runs-on: [self-hosted, linux]
    
    container:
      image: ghcr.io/meta-flutter/ubuntu-20-dev:main
      options:
        --user 1001
        --storage-opt overlay.mount_program=/usr/bin/fuse-overlayfs
        --storage-opt overlay.mountopt=nodev,metacopy=on,noxattrs=1
        -v /mnt/raid10/github-ci/download:/home/dev/dl:Z
        -v /mnt/raid10/github-ci/sstate/yocto/kirkstone/imx8mmevk:/home/dev/sstate:Z
        -v /mnt/raid10/github-ci/artifacts/imx8mmevk:/home/dev/artifacts:Z

    steps:
    
      - name: Display UID Info
        run: |
          whoami
          id -u
          
      - name: Set Ownership
        run: |
          chown -R dev:dev $HOME .
          
      - uses: actions/checkout@v3
        with:
          path: ''

      - name: Fetch poky
        run: |
          [ -d ../imx8mmevk-kirkstone ] || mkdir -p ../imx8mmevk-kirkstone
          cd ../imx8mmevk-kirkstone
          rm -rf sources || true
          ls -la
          git config --list
          git config --global user.email joel@winarske@gmail.com
          git config --global user.name "Joel Winarske"
          git config --list
          rm -rf conf | true
          /home/dev/bin/repo init -u https://source.codeaurora.org/external/imx/imx-manifest -m imx-5.15.32-2.0.0.xml -b imx-linux-kirkstone
          /home/dev/bin/repo sync --force-sync --no-clone-bundle -j `grep -c ^processor /proc/cpuinfo`
          git clone --single-branch --branch kirkstone https://github.com/meta-flutter/meta-flutter-vm sources/meta-flutter-vm &
          git clone --single-branch --branch kirkstone https://git.yoctoproject.org/git/meta-security.git sources/meta-security &
          git clone --single-branch --branch kirkstone https://git.yoctoproject.org/git/meta-selinux.git sources/meta-selinux &
          wait

      - name: Configure build
        shell: bash
        working-directory: ../imx8mmevk-kirkstone
        run: |
          rm -rf build-wayland/conf
          mkdir -p build-wayland/conf
          echo 'CONF_VERSION = "2"' > build-wayland/conf/local.conf
          echo 'ACCEPT_FSL_EULA = "1"' >> build-wayland/conf/local.conf
          DISTRO=fsl-imx-wayland MACHINE=imx8mmevk source imx-setup-release.sh -b build-wayland        
          echo '***************************************'
          sed -i '/DL_DIR/d' ./conf/local.conf
          #
          echo 'INHERIT += "rm_work"' >> ./conf/local.conf
          echo 'DL_DIR = "/home/dev/dl"' >> conf/local.conf
          echo 'SSTATE_DIR = "/home/dev/sstate"' >> conf/local.conf
          echo 'SSTATE_MIRRORS = "file://.* file:///home/dev/sstate/PATH"' >> conf/local.conf
          #
          # Localization
          #
          echo 'DEFAULT_TIMEZONE = "America/Los_Angeles"' >> ./conf/local.conf
          echo 'ENABLE_BINARY_LOCALE_GENERATION = "1"' >> ./conf/local.conf
          echo 'IMAGE_LINGUAS:append = " en-us en-gb es-us"' >> ./conf/local.conf
          echo 'GLIBC_GENERATE_LOCALES:append = " en_US.UTF-8 es_US.UTF-8 en_GB.UTF-8"' >> ./conf/local.conf
          echo 'IMAGE_INSTALL:append = "\
              tzdata-core \
              tzdata-americas \
              "' >> ./conf/local.conf
          #
          # Baseline
          #
          echo 'DISTRO_FEATURES:append = " systemd wifi bluetooth usbhost"' >> ./conf/local.conf
          echo 'DISTRO_FEATURES:remove = "sysvinit x11 usbgadget ptest xen"' >> ./conf/local.conf
          echo 'INIT_MANAGER = "systemd"' >> ./conf/local.conf
          #
          # Wayland
          #
          echo 'DISTRO_FEATURES:append = " opengl wayland pam"' >> ./conf/local.conf
          echo 'PACKAGECONFIG:append:pn-weston = " remoting"' >> ./conf/local.conf
          #
          # Vulkan
          #
          echo 'DISTRO_FEATURES:remove = "vulkan"' >> conf/local.conf
          #
          # SELinux
          #
          echo 'DISTRO_FEATURES:append = " acl xattr pam selinux audit"' >> ./conf/local.conf
          echo 'PREFERRED_PROVIDER_virtual/refpolicy = "refpolicy-mls"' >> ./conf/local.conf
          #
          # SECCOMP
          #
          echo 'DISTRO_FEATURES:append = " security seccomp"' >> ./conf/local.conf          
          #
          # Virtualization
          #
          echo 'DISTRO_FEATURES:append = " virtualization kvm"' >> ./conf/local.conf
          echo 'RUST_PANIC_STRATEGY = "abort"' >> ./conf/local.conf
          echo 'IMAGE_INSTALL:append = "\
              kvmtool dmidecode \
              libvirt libvirt-libvirtd libvirt-virsh \
              crosvm crosvm-direct crosvm-plugin \
              firecracker jailer curl \
              "' >> ./conf/local.conf
          #
          # Flutter
          #
          echo 'PACKAGECONFIG:append:pn-flutter-engine = " profile debug"' >> conf/local.conf
          echo 'IMAGE_INSTALL:append = "\
              dart-sdk \
              flutter-auto \
              packagegroup-flutter-test-apps \
              flutter-pi \
              "' >> ./conf/local.conf
          #
          # Kernel
          #
          echo 'LINUX_KERNEL_TYPE = "preempt-rt"' >> ./conf/local.conf
          echo '********** conf/local.conf **********'
          cat conf/local.conf
          echo '***************************************'
          bitbake-layers add-layer \
              ../../meta-flutter \
              ../sources/meta-flutter-vm \
              ../sources/meta-security \
              ../sources/meta-selinux \
              ../sources/meta-openembedded/meta-perl
          bitbake-layers show-layers
          echo '***************************************'
          bitbake -e virtual/kernel | grep "^PV"
          bitbake -e virtual/kernel | grep "^PN"
          echo '***************************************'
          bitbake -e ${{ env.IMAGE }} | grep "^DISTRO_FEATURES"
          bitbake -e ${{ env.IMAGE }} | grep "^IMAGE_FEATURES"
          echo '***************************************'
          bitbake -e > bb.environment
          bitbake -c do_cleansstate flutter-sdk-native

      - name: Build imx-image-core
        shell: bash
        working-directory: ../imx8mmevk-kirkstone
        run: |
          IMAGE=${{ env.IMAGE }}
          MACHINE=${{ env.MACHINE }}
          ARTIFACTS=/home/dev/artifacts
          DISTRO=${{ env.DISTRO }} MACHINE=${MACHINE} source setup-environment build-wayland
          bitbake ${IMAGE}
          rm -rf ${ARTIFACTS}/*
          cp bb.environment $ARTIFACTS
          cp tmp/deploy/images/${MACHINE}/${IMAGE}-${MACHINE}.wic.bz2 $ARTIFACTS

      - name: Publish SD card image artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.MACHINE }}-${{ env.IMAGE }}
          path: |
             /home/dev/artifacts/*
