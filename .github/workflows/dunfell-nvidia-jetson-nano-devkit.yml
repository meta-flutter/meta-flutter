
name: dunfell-nvidia-jetson-nano-devkit

on:
  pull_request:
    types: [ opened, synchronize, reopened, closed ]
  release:
    types: [ published, created, edited ]
  workflow_dispatch:
  schedule:
    # daily
    - cron:  '0 0 * * *'

jobs:

  dunfell-nvidia-jetson-nano-devkit:
  
    env:
      YOCTO_BRANCH: dunfell
      DEMO_BRANCH: dunfell-l4t-r32.5.0
      MACHINE: jetson-nano-devkit
      DISTRO: tegrademo

    runs-on: [self-hosted, linux]
    
    container:
      image: ghcr.io/meta-flutter/meta-flutter/ubuntu-18-dev:main
      options:
        --user 1001:1001
        --ipc host
        --privileged
        --security-opt label=disable
        --pid host
        --userns keep-id
        --ulimit host 
        --mount type=devpts,destination=/dev/pts
        --security-opt label=disable
        -v /mnt/raid10/github-ci/download:/home/dev/dl:Z
        -v /mnt/raid10/github-ci/sstate/yocto/dunfell/nvidia-jetson-nano-devkit:/home/dev/sstate:Z
        -v /mnt/raid10/github-ci/artifacts/nvidia-jetson-nano-devkit:/home/dev/artifacts:Z
        -v /mnt/raid10/github-ci/nvidia:/home/dev/devnet:Z


    steps:
    
      - name: Display UID Info
        run: |
          whoami
          id -u
          
      - name: Set Ownership
        run: |
          chown -R dev:dev $HOME .
          
      - uses: actions/checkout@v3
        with:
          path: ''

      - name: Fetch Source
        run: |
          [ -d ../${{ env.MACHINE }} ] || mkdir -p ../${{ env.MACHINE }}
          cd ../${{ env.MACHINE }}
          [ -d tegra-demo-distro ] || git clone -b ${{ env.DEMO_BRANCH }} --single-branch https://github.com/OE4T/tegra-demo-distro.git
          cd tegra-demo-distro
          git pull
          git submodule update --init
          cd repos
          rm -rf meta-clang meta-vulkan meta-rust || true
          git clone -b dunfell-clang12 --single-branch https://github.com/kraj/meta-clang.git &
          git clone -b dunfell-no-mesa --single-branch https://github.com/jwinarske/meta-vulkan.git &
          git clone -b master --single-branch https://github.com/meta-rust/meta-rust.git &
          wait
          cd ../layers
          rm -rf meta-flutter meta-clang meta-vulkan meta-rust || true
          ln -sf ../repos/meta-rust meta-rust
          ln -sf ../repos/meta-clang meta-clang
          ln -sf ../repos/meta-vulkan meta-vulkan
          ln -sf ../../../meta-flutter meta-flutter
          cd ..

      - name: Configure build
        shell: bash
        working-directory: ../${{ env.MACHINE }}/tegra-demo-distro
        run: |
          env
          WORKSPACE=`pwd`
          rm -rf build/conf || true
          . ./setup-env --machine ${{ env.MACHINE }}
          sed -i '/MACHINE ??=/d' ./conf/local.conf
          sed -i '/DISTRO ?=/d' ./conf/local.conf
          sed -i '/NVIDIA_DEVNET_MIRROR/d' ./conf/local.conf
          sed -i "/GLIBC_GENERATE_LOCALES/d" ./conf/local.conf
          sed -i "/IMAGE_LINGUAS/d" ./conf/local.conf
          echo "MACHINE ??= \"${{ env.MACHINE }}\"" >> ./conf/local.conf
          echo "DISTRO ?= \"${{ env.DISTRO }}\"" >> ./conf/local.conf
          echo 'NVIDIA_DEVNET_MIRROR ?= "file:///home/dev/devnet"' >> ./conf/local.conf
          echo '***************************************'
          echo 'INHERIT += "rm_work"' >> ./conf/local.conf
          echo 'DL_DIR = "/home/dev/dl"' >> ./conf/local.conf
          echo 'SSTATE_DIR = "/home/dev/sstate"' >> ./conf/local.conf
          echo 'SSTATE_MIRRORS = "file://.* file:///home/dev/sstate/PATH"' >> ./conf/local.conf
          echo 'DISTRO_FEATURES += "wayland opengl vulkan virtualization"' >> ./conf/local.conf
          echo 'DISTRO_FEATURES_remove = "x11"' >> ./conf/local.conf
          echo 'GLIBC_GENERATE_LOCALES = "en_US.UTF-8"' >> ./conf/local.conf
          echo 'IMAGE_LINGUAS = "en-us"' >> ./conf/local.conf
          echo 'CLANGSDK = "1"' >> ./conf/local.conf
          echo 'CORE_IMAGE_BASE_INSTALL_remove = " packagegroup-demo-vulkantests"' >> ./conf/local.conf
          echo 'CORE_IMAGE_BASE_INSTALL_remove = " packagegroup-demo-westontests"' >> ./conf/local.conf
          echo 'PACKAGECONFIG_pn-sascha-samples = "wayland"' >> ./conf/local.conf
          echo 'TEGRAFLASH_SDCARD_SIZE = "32G"' >> ./conf/local.conf
          echo 'KERNEL_ARGS_append = " quiet"' >> ./conf/local.conf
          echo 'PREFERRED_VERSION:gstreamer1.0 = "1.16%"' >> ./conf/local.conf
          echo 'PREFERRED_VERSION:gstreamer1.0-libav = "1.16%"' >> ./conf/local.conf
          echo 'PREFERRED_VERSION:gstreamer1.0-plugins-bad = "1.16%"' >> ./conf/local.conf
          echo 'PREFERRED_VERSION:gstreamer1.0-plugins-good = "1.16%"' >> ./conf/local.conf
          echo 'PREFERRED_VERSION:gstreamer1.0-plugins-ugly = "1.16%"' >> ./conf/local.conf
          echo 'PREFERRED_VERSION:gstreamer1.0-plugins-base = "1.16%"' >> ./conf/local.conf
          echo 'PACKAGECONFIG:remove:pn-gstreamer1.0-plugins-bad = "vulkan"' >> ./conf/local.conf
          echo 'LICENSE_FLAGS_WHITELIST = "commercial"' >> ./conf/local.conf
          echo 'PREFERRED_VERSION_cmake = "3.22.3"' >> ./conf/local.conf
          echo 'PREFERRED_VERSION_cmake-native = "3.22.3"' >> ./conf/local.conf
          echo 'PREFERRED_VERSION_nativesdk-cmake = "3.22.3"' >> ./conf/local.conf
          echo '********** ./conf/local.conf **********'
          cat ./conf/local.conf
          echo '***************************************'
          bitbake-layers add-layer \
            ${RUNNER_WORKSPACE}/${{ env.MACHINE }}/tegra-demo-distro/layers/meta-flutter \
            $WORKSPACE/layers/meta-clang \
            $WORKSPACE/layers/meta-vulkan \
            $WORKSPACE/layers/meta-rust
          bitbake-layers show-layers
          echo '***************************************'

      - name: Build Base Image
        shell: bash
        working-directory: ../${{ env.MACHINE }}/tegra-demo-distro
        run: |
          . ./setup-env
          bitbake gstreamer1.0-plugins-bad -c do_cleansstate
          bitbake demo-image-weston
          rm -rf /home/dev/artifacts/*

      - name: Build Image with Flutter
        shell: bash
        working-directory: ../${{ env.MACHINE }}/tegra-demo-distro
        run: |
          . ./setup-env
          echo 'IMAGE_INSTALL_append = "\
              gstreamer1.0-libav \
              gstreamer1.0-plugins-bad \
              gstreamer1.0-plugins-good \
              gstreamer1.0-plugins-ugly \
              vulkan-tools vulkan-loader \
              libdrm-tests \
              flutter-engine \
              flutter-gallery \
              flutter-auto \
              adwaita-icon-theme-cursors \
              sascha-samples \
              flutter-test-frb \
              "' >> ./conf/local.conf
          bitbake demo-image-weston
          rm -rf /home/dev/artifacts/*
          cp tmp/deploy/images/${{ env.MACHINE }}/demo-image-weston-${{ env.MACHINE }}-*.tegraflash.tar.gz /home/dev/artifacts

      - name: Publish bootable SD card image
        uses: actions/upload-artifact@v3
        with:
          name: demo-image-weston-${{ env.MACHINE }}-flutter-sdimage
          path: |
             /home/dev/artifacts/*
