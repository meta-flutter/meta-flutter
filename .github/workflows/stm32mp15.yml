name: stm32mp15

on:
  pull_request:
    types: [ opened, synchronize, reopened, closed ]
  release:
    types: [ published, created, edited ]
  workflow_dispatch:
  schedule:
    # daily
    - cron:  '0 0 * * *'

jobs:

  dunfell-drm:
  
    env:
      DISTRO_VERSION: 3.1.11
      YOCTO_BRANCH: dunfell
      MACHINE: stm32mp1-disco
      DISTRO: openstlinux-eglfs
      
    runs-on: [self-hosted, linux]
    
    container:
      image: ghcr.io/meta-flutter/ubuntu-20-dev:main
      options:
        --user 1018
        --storage-opt overlay.mount_program=/usr/bin/fuse-overlayfs
        --storage-opt overlay.mountopt=nodev,metacopy=on,noxattrs=1
        -v /b/github-ci/download:/home/dev/dl:Z
        -v /b/github-ci/sstate/yocto/dunfell/stm32mp15:/home/dev/sstate:Z
        -v /b/github-ci/artifacts/stm32mp15:/home/dev/artifacts:Z

    steps:
    
      - name: Display UID Info
        run: |
          whoami
          id -u
          
      - name: Set Ownership
        run: |
          chown -R dev:dev $HOME .
          
      - uses: actions/checkout@v2
        with:
          path: meta-flutter

      - name: Fetch poky
        run: |
          [ -d ../stm32mp15-dunfell ] || mkdir -p ../stm32mp15-dunfell
          cd ../stm32mp15-dunfell
          pwd
          ls -la
          git config --list
          git config --global user.email joel@winarske@gmail.com
          git config --global user.name "Joel Winarske"
          git config --list
          rm -rf layers/meta-clang
          rm -rf layers/meta-flutter
          /home/dev/bin/repo init -u https://github.com/STMicroelectronics/oe-manifest.git -b refs/tags/openstlinux-5.10-dunfell-mp1-21-07-21
          /home/dev/bin/repo sync --force-sync --no-clone-bundle -j `grep -c ^processor /proc/cpuinfo` &
          git clone -b dunfell https://github.com/kraj/meta-clang.git layers/meta-clang &
          git clone -b main https://github.com/meta-flutter/meta-flutter.git layers/meta-flutter &
          wait

      - name: Configure build
        shell: bash
        working-directory: ../stm32mp15-dunfell
        run: |
          echo '***************************************'
          sed -i '/DL_DIR/d' ./conf/local.conf
          sed -i '/SSTATE_DIR/d' ./conf/local.conf
          sed -i '/SSTATE_MIRRORS/d' ./conf/local.conf
          sed -i '/FLUTTER_CHANNEL/d' ./conf/local.conf
          sed -i '/PACKAGECONFIG/d' ./conf/local.conf
          sed -i '/flutter-pi/d' ./conf/local.conf
          sed -i '/flutter-gallery/d' ./conf/local.conf
          echo '***************************************'
          echo 'DL_DIR = "/home/dev/dl"' >> ./conf/local.conf
          echo 'SSTATE_DIR = "/home/dev/sstate"' >> ./conf/local.conf
          echo 'SSTATE_MIRRORS = "file://.* file:///home/dev/sstate/PATH"' >> ./conf/local.conf
          echo 'SSTATE_MIRRORS += "file://.* http://sstate.yoctoproject.org/${{ env.DISTRO_VERSION }}/PATH;downloadfilename=PATH"' >> ./conf/local.conf
          echo 'FLUTTER_CHANNEL = "master"' >> ./conf/local.conf
          echo 'PACKAGECONFIG:pn-flutter-engine = "embedder-for-target disable-desktop-embeddings fontconfig mode-release"' >> ./conf/local.conf
          echo '********** ./conf/local.conf **********'
          cat ./conf/local.conf
          echo '***************************************'
          bitbake-layers add-layer ../layers/meta-clang ../layers/meta-flutter
          bitbake-layers show-layers
          echo '***************************************'
          bitbake -e virtual/kernel | grep "^PV"
          bitbake -e virtual/kernel | grep "^PN"
          echo '***************************************'
          bitbake -e > bb.environment

      - name: Build core-image-minimal
        shell: bash
        working-directory: ../stm32mp15-dunfell
        run: |
          . ./sources/poky/oe-init-build-env $MACHINE
          bitbake core-image-minimal

      - name: Build flutter-engine
        shell: bash
        working-directory: ../stm32mp15-dunfell
        run: |
          . ./sources/poky/oe-init-build-env $MACHINE
          bitbake flutter-engine -c do_cleansstate
          bitbake flutter-engine
          rm -rf /home/dev/artifacts/*
          cp tmp/deploy/rpm/cortexa7t2hf_neon_vfpv4/flutter-engine-git*.rpm /home/dev/artifacts

      - name: Publish flutter-engine artifacts
        uses: actions/upload-artifact@v2
        with:
          name: flutter-engine-rpi3
          path: |
             /home/dev/artifacts/*.rpm

      - name: Build flutter-pi
        shell: bash
        working-directory: ../stm32mp15-dunfell
        run: |
          . ./sources/poky/oe-init-build-env $MACHINE
          bitbake flutter-pi -c do_cleansstate
          bitbake flutter-pi
          rm -rf /home/dev/artifacts/*
          cp tmp/deploy/rpm/cortexa7t2hf_neon_vfpv4/flutter-pi-git*.rpm /home/dev/artifacts

      - name: Publish flutter-pi artifacts
        uses: actions/upload-artifact@v2
        with:
          name: flutter-pi-rpi3
          path: |
             /home/dev/artifacts/*.rpm

      - name: Build flutter-gallery
        shell: bash
        working-directory: ../stm32mp15-dunfell
        run: |
          . ./sources/poky/oe-init-build-env $MACHINE
          bitbake flutter-sdk-native -c do_cleansstate
          bitbake flutter-gallery -c do_cleansstate
          bitbake flutter-gallery
          rm -rf /home/dev/artifacts/*
          cp tmp/deploy/rpm/cortexa7t2hf_neon_vfpv4/flutter-gallery-git*.rpm /home/dev/artifacts

      - name: Publish flutter-gallery artifacts
        uses: actions/upload-artifact@v2
        with:
          name: flutter-gallery-rpi3
          path: |
             /home/dev/artifacts/*.rpm

      - name: Build core-image-minimal
        shell: bash
        working-directory: ../stm32mp15-dunfell
        run: |
          . ./sources/poky/oe-init-build-env $MACHINE
          sed -i '/flutter-pi/d' ./conf/local.conf
          sed -i '/flutter-gallery/d' ./conf/local.conf
          echo 'CORE_IMAGE_EXTRA_INSTALL:append = " flutter-pi"' >> ./conf/local.conf
          echo 'CORE_IMAGE_EXTRA_INSTALL:append = " flutter-gallery"' >> ./conf/local.conf
          bitbake core-image-minimal
          rm -rf /home/dev/artifacts/*
          cp bb.environment /home/dev/artifacts
          cp tmp/deploy/images/raspberrypi3/core-image-minimal-raspberrypi3.wic.bmap /home/dev/artifacts
          cp tmp/deploy/images/raspberrypi3/core-image-minimal-raspberrypi3.wic.bz2 /home/dev/artifacts

      - name: Publish OS image artifact
        uses: actions/upload-artifact@v2
        with:
          name: stm32mp15-disco-image
          path: |
             /home/dev/artifacts/*
