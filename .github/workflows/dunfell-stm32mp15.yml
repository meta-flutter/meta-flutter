name: dunfell-stm32mp15

on:
  pull_request:
    types: [ opened, synchronize, reopened, closed ]
  release:
    types: [ published, created, edited ]
  workflow_dispatch:
  schedule:
    # daily
    - cron:  '0 0 * * *'

jobs:

  dunfell-eglfs:
  
    env:
      MACHINE: stm32mp1-disco
      DISTRO: openstlinux-eglfs
      
    runs-on: [self-hosted, linux]
    
    container:
      image: ghcr.io/meta-flutter/ubuntu-18-dev:main
      options:
        --user 1018
        --storage-opt overlay.mount_program=/usr/bin/fuse-overlayfs
        --storage-opt overlay.mountopt=nodev,metacopy=on,noxattrs=1
        -v /b/github-ci/download:/home/dev/dl:Z
        -v /b/github-ci/sstate/yocto/dunfell/stm32mp15:/home/dev/sstate:Z
        -v /b/github-ci/artifacts/stm32mp15:/home/dev/artifacts:Z

    steps:
    
      - name: Display UID Info
        run: |
          whoami
          id -u
          
      - name: Set Ownership
        run: |
          chown -R dev:dev $HOME .
          
      - uses: actions/checkout@v2

      - name: Fetch poky
        run: |
          [ -d ../stm32mp15-dunfell ] || mkdir -p ../stm32mp15-dunfell
          cd ../stm32mp15-dunfell
          rm -rf layers
          ls -la
          /home/dev/bin/repo init -u https://github.com/STMicroelectronics/oe-manifest.git -b refs/tags/openstlinux-5.10-dunfell-mp1-21-11-30
          /home/dev/bin/repo sync --force-sync --no-clone-bundle -j `grep -c ^processor /proc/cpuinfo` &
          git clone -b jw/dunfell-clang12 https://github.com/jwinarske/meta-clang.git layers/meta-clang &
          wait
          sed -i "/xwayland=true/d" layers/meta-st/meta-st-openstlinux/recipes-graphics/wayland/weston-init/weston.ini

      - name: Configure build
        shell: bash
        working-directory: ../stm32mp15-dunfell
        run: |
          rm -rf build-openstlinuxeglfs-${{ env.MACHINE }}/conf
          echo n | source layers/meta-st/scripts/envsetup.sh --no-ui
          echo '***************************************'
          LOCAL_CONF=./build-openstlinuxeglfs-${{ env.MACHINE }}/conf/local.conf
          echo '***************************************'
          sed -i "/ACCEPT_EULA/d" $LOCAL_CONF
          echo 'ACCEPT_EULA_${{ env.MACHINE }} = "1"' >> $LOCAL_CONF
          echo 'DL_DIR = "/home/dev/dl"' >> $LOCAL_CONF
          echo 'SSTATE_DIR = "/home/dev/sstate"' >> $LOCAL_CONF
          echo 'SSTATE_MIRRORS = "file://.* file:///home/dev/sstate/PATH"' >> $LOCAL_CONF
          echo 'FLUTTER_CHANNEL = "master"' >> $LOCAL_CONF
          echo 'PACKAGECONFIG_pn-flutter-pi-debug = "text_input raw_keyboard"' >> $LOCAL_CONF
          echo 'INHERIT_remove = "uninative"' >> $LOCAL_CONF
          echo 'CORE_IMAGE_EXTRA_INSTALL += " \
                    flutter-pi-debug \
                    avahi-daemon \
                    ntp ntp-tickadj \
                    fbgrab \
                    "' >> $LOCAL_CONF
          echo '********** ./conf/local.conf **********'
          cat $LOCAL_CONF
          echo '***************************************'
          source ./layers/meta-st/scripts/envsetup.sh --no-ui
          echo '***************************************'
          env
          echo '***************************************'
          bitbake-layers add-layer ../layers/meta-clang ../../meta-flutter
          bitbake-layers show-layers
          echo '***************************************'
          bitbake -e virtual/kernel | grep "^PV"
          bitbake -e virtual/kernel | grep "^PN"
          echo '***************************************'
          bitbake -e > bb.environment
          echo '* DISTRO_FEATURES *********************'
          bitbake -e st-image-core | grep "^DISTRO_FEATURES"
          echo '* CORE_IMAGE_EXTRA_INSTALL ************'
          bitbake -e st-image-core | grep "^CORE_IMAGE_EXTRA_INSTALL"
          echo '* COMBINED_FEATURES *******************'
          bitbake -e st-image-core | grep "^COMBINED_FEATURES"
          echo '* IMAGE_FEATURES **********************'
          bitbake -e st-image-core | grep "^IMAGE_FEATURES"
          echo '***************************************'
          bitbake ca-certificates -c do_cleansstate
          bitbake ca-certificates-native -c do_cleansstate
          bitbake flutter-sdk-native -c do_cleansstate
          bitbake flutter-gallery-debug -c do_cleansstate
          bitbake flutter-engine-debug -c do_cleansstate

      - name: Build vk-flutter-engine-debug
        shell: bash
        working-directory: ../stm32mp15-dunfell
        run: |
          source ./layers/meta-st/scripts/envsetup.sh --no-ui
          bitbake vk-flutter-engine-debug -c do_cleansstate
          bitbake vk-flutter-engine-debug
          rm -rf /home/dev/artifacts/*
          cp tmp-glibc/deploy/deb/cortexa7t2hf-neon-vfpv4/vk-flutter-engine-debug_git-*.deb /home/dev/artifacts

      - name: Publish vk-flutter-engine-debug artifact
        uses: actions/upload-artifact@v2
        with:
          name: vk-flutter-engine-debug
          path: |
             /home/dev/artifacts/*

      - name: Build vk-flutter-engine-profile
        shell: bash
        working-directory: ../stm32mp15-dunfell
        run: |
          source ./layers/meta-st/scripts/envsetup.sh --no-ui
          bitbake vk-flutter-engine-profile -c do_cleansstate
          bitbake vk-flutter-engine-profile
          rm -rf /home/dev/artifacts/*
          cp tmp-glibc/deploy/deb/cortexa7t2hf-neon-vfpv4/vk-flutter-engine-profile_git-*.deb /home/dev/artifacts

      - name: Publish vk-flutter-engine-profile artifact
        uses: actions/upload-artifact@v2
        with:
          name: vk-flutter-engine-profile
          path: |
             /home/dev/artifacts/*

      - name: Build vk-flutter-engine-release
        shell: bash
        working-directory: ../stm32mp15-dunfell
        run: |
          source ./layers/meta-st/scripts/envsetup.sh --no-ui
          bitbake vk-flutter-engine-release -c do_cleansstate
          bitbake vk-flutter-engine-release
          rm -rf /home/dev/artifacts/*
          cp tmp-glibc/deploy/deb/cortexa7t2hf-neon-vfpv4/vk-flutter-engine-release_git-*.deb /home/dev/artifacts

      - name: Publish vk-flutter-engine-release artifact
        uses: actions/upload-artifact@v2
        with:
          name: vk-flutter-engine-release
          path: |
             /home/dev/artifacts/*

      - name: Build st-image-core
        shell: bash
        working-directory: ../stm32mp15-dunfell
        run: |
          source ./layers/meta-st/scripts/envsetup.sh --no-ui
          bitbake st-image-core
          rm -rf /home/dev/artifacts/*
          mkdir -p /home/dev/artifacts/arm-trusted-firmware
          cd tmp-glibc/deploy/images/${{ env.MACHINE }}
          cp -r flashlayout_st-image-core /home/dev/artifacts/
          cp -r fip /home/dev/artifacts
          cp -r scripts /home/dev/artifacts
          cp arm-trusted-firmware/*.stm32 /home/dev/artifacts/arm-trusted-firmware/
          cp st-image-*-${{ env.DISTRO }}-${{ env.MACHINE }}.ext4 /home/dev/artifacts/
          ls -la /home/dev/artifacts

      - name: Publish OS image artifact
        uses: actions/upload-artifact@v2
        with:
          name: stm32mp1-disco-core-image
          path: |
             /home/dev/artifacts/*

      - name: Build st-image-core-flutter-debug SDK
        shell: bash
        working-directory: ../stm32mp15-dunfell
        run: |
          source ./layers/meta-st/scripts/envsetup.sh --no-ui
          bitbake st-image-core -c do_populate_sdk
          rm -rf /home/dev/artifacts/*
          cp tmp-glibc/deploy/sdk/st-image-core-openstlinux-eglfs-*.sh /home/dev/artifacts/

      - name: Publish st-image-core-flutter-debug SDK artifact
        uses: actions/upload-artifact@v2
        with:
          name: st-image-core-flutter-debug-sdk-linux
          path: |
             /home/dev/artifacts/*
