name: kirkstone-qc-dragonboard

on:
  pull_request:
    types: [ opened, synchronize, reopened, closed ]
  release:
    types: [ published, created, edited ]
  workflow_dispatch:
  schedule:
    # daily
    - cron:  '0 0 * * *'

jobs:

  kirkstone-db820c-rpb-wayland:
  
    env:
      DISTRO_VERSION: "4.0"
      YOCTO_BRANCH: "kirkstone"
      MACHINE: dragonboard-820c
      DISTRO: rpb-wayland
      IMAGE: rpb-weston-image
      BOOT_VERSION: 114
      BOOT_MD5: 6a58ac6b58a7bf3888011955a195ab8d
      
    runs-on: [self-hosted, linux]
    
    container:
      image: ghcr.io/meta-flutter/ubuntu-20-dev:main
      options:
        --user 1018
        --storage-opt overlay.mount_program=/usr/bin/fuse-overlayfs
        --storage-opt overlay.mountopt=nodev,metacopy=on,noxattrs=1
        -v /mnt/raid10/github-ci/download:/home/dev/dl:Z
        -v /mnt/raid10/github-ci/sstate/yocto/kirkstone/db820c:/home/dev/sstate:Z
        -v /mnt/raid10/github-ci/artifacts/db820c:/home/dev/artifacts:Z
        -v /mnt/raid10/github-ci/qc/apq8096:/lib/firmware/qcom/apq8096

    steps:
    
      - name: Display UID Info
        run: |
          whoami
          id -u
          
      - name: Set Ownership
        run: |
          chown -R dev:dev $HOME .
          
      - uses: actions/checkout@v2
        with:
          path: ''

      - name: Fetch poky
        run: |
          [ -d ../db820c-kirkstone ] || mkdir -p ../db820c-kirkstone
          cd ../db820c-kirkstone
          rm -rf sources || true
          ls -la
          git config --list
          git config --global user.email joel@winarske@gmail.com
          git config --global user.name "Joel Winarske"
          git config --list
          rm -rf conf | true
          /home/dev/bin/repo init -u https://github.com/jwinarske/manifests.git -m db820c.xml -b kirkstone
          /home/dev/bin/repo sync --force-sync --no-clone-bundle -j `grep -c ^processor /proc/cpuinfo`
          chmod +rw conf/conf/*.conf

      - name: Configure build
        shell: bash
        working-directory: ../db820c-kirkstone
        run: |
          MACHINE=${{ env.MACHINE }} DISTRO=${{ env.DISTRO }} . ./setup-environment ${{ env.MACHINE }}
          echo '***************************************'
          echo "ACCEPT_EULA_dragonboard-820c = \"1\"" >> conf/auto.conf
          echo '***************************************'
          echo 'DL_DIR = "/home/dev/dl"' >> conf/local.conf
          echo 'SSTATE_DIR = "/home/dev/sstate"' >> conf/local.conf
          echo 'SSTATE_MIRRORS = "file://.* file:///home/dev/sstate/PATH"' >> conf/local.conf
          echo 'GLIBC_GENERATE_LOCALES:append = " en_US.UTF-8 es_US.UTF-8 en_GB.UTF-8"' >> conf/local.conf
          echo 'IMAGE_LINGUAS:append = " en-us en-gb es-us"' >> conf/local.conf
          echo 'DEFAULT_TIMEZONE = "America/Los_Angeles"' >> conf/local.conf
          echo 'IMAGE_INSTALL:append = "\
              tzdata-core \
              tzdata-americas \
              default-language-en-us-utf8 \
              ivi-homescreen-release \
              flutter-gallery-release \
              flutter-secure-storage-example-release \
              flutter-video-player-example-release \
              membrane-dart-example \
              "' >> conf/local.conf
          echo 'LICENSE_FLAGS_ACCEPTED += " commercial"' >> conf/local.conf
          echo '********** conf/local.conf **********'
          cat conf/local.conf
          echo '***************************************'
          bitbake-layers show-layers
          echo '***************************************'
          bitbake -e virtual/kernel | grep "^PV"
          bitbake -e virtual/kernel | grep "^PN"
          echo '***************************************'
          bitbake -e ${{ env.IMAGE }} | grep "^DISTRO_FEATURES"
          bitbake -e ${{ env.IMAGE }} | grep "^IMAGE_FEATURES"
          echo '***************************************'
          bitbake -e > bb.environment
          bitbake -c do_cleansstate flutter-sdk-native
          bitbake -c do_cleansstate flutter-engine-release
          bitbake -c do_cleansstate flutter-gallery-release
          bitbake -c do_cleansstate flutter-secure-storage-example-release

      - name: Build rpb-weston-image
        shell: bash
        working-directory: ../db820c-kirkstone
        run: |
          WORKSPACE=`pwd`
          . ./setup-environment ${{ env.MACHINE }}
          bitbake ${{ env.IMAGE }}
          ARTIFACTS=/home/dev/artifacts
          rm -rf ${ARTIFACTS}/*
          cp bb.environment ${ARTIFACTS}
          cd tmp-rpb_wayland-glibc/deploy/images/${{ env.MACHINE }}
          ${WORKSPACE}/conf/db820c/gen_flat_build_folder.sh ${{ env.MACHINE }} ufs ${{ env.BOOT_VERSION }} ${{ env.BOOT_MD5 }}
          cp flat_build_ufs.tar.gz ${ARTIFACTS}
          cp ${{ env.IMAGE }}-${{ env.MACHINE }}.tar.xz ${ARTIFACTS}
          ls -la ${ARTIFACTS}

      - name: Publish SD card image artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.MACHINE }}-${{ env.IMAGE }}
          path: |
             /home/dev/artifacts/*

  kirkstone-db410c-rpb-wayland:
  
    env:
      DISTRO_VERSION: "4.0"
      YOCTO_BRANCH: "kirkstone"
      MACHINE: dragonboard-410c
      DISTRO: rpb-wayland
      IMAGE: rpb-weston-image
      BOOT_VERSION: 182
      BOOT_MD5: e0517d2c7b1fd53ab8322ecb78ce9ff9
      
    runs-on: [self-hosted, linux]
    
    container:
      image: ghcr.io/meta-flutter/ubuntu-20-dev:main
      options:
        --user 1018
        --storage-opt overlay.mount_program=/usr/bin/fuse-overlayfs
        --storage-opt overlay.mountopt=nodev,metacopy=on,noxattrs=1
        -v /mnt/raid10/github-ci/download:/home/dev/dl:Z
        -v /mnt/raid10/github-ci/sstate/yocto/kirkstone/db410c:/home/dev/sstate:Z
        -v /mnt/raid10/github-ci/artifacts/db410c:/home/dev/artifacts:Z

    steps:
    
      - name: Display UID Info
        run: |
          whoami
          id -u
          
      - name: Set Ownership
        run: |
          chown -R dev:dev $HOME .
          
      - uses: actions/checkout@v2
        with:
          path: ''

      - name: Fetch poky
        run: |
          [ -d ../db410c-kirkstone ] || mkdir -p ../db410c-kirkstone
          cd ../db410c-kirkstone
          rm -rf sources || true
          ls -la
          git config --list
          git config --global user.email joel@winarske@gmail.com
          git config --global user.name "Joel Winarske"
          git config --list
          rm -rf conf | true
          /home/dev/bin/repo init -u https://github.com/jwinarske/manifests.git -m db820c.xml -b kirkstone
          /home/dev/bin/repo sync --force-sync --no-clone-bundle -j `grep -c ^processor /proc/cpuinfo`
          chmod +rw conf/conf/*.conf

      - name: Configure build
        shell: bash
        working-directory: ../db410c-kirkstone
        run: |
          MACHINE=${{ env.MACHINE }} DISTRO=${{ env.DISTRO }} . ./setup-environment ${{ env.MACHINE }}
          echo '***************************************'
          echo "ACCEPT_EULA_dragonboard-820c = \"1\"" >> conf/auto.conf
          echo '***************************************'
          echo 'DL_DIR = "/home/dev/dl"' >> conf/local.conf
          echo 'SSTATE_DIR = "/home/dev/sstate"' >> conf/local.conf
          echo 'SSTATE_MIRRORS = "file://.* file:///home/dev/sstate/PATH"' >> conf/local.conf
          echo 'GLIBC_GENERATE_LOCALES:append = " en_US.UTF-8 es_US.UTF-8 en_GB.UTF-8"' >> conf/local.conf
          echo 'IMAGE_LINGUAS:append = " en-us en-gb es-us"' >> conf/local.conf
          echo 'DEFAULT_TIMEZONE = "America/Los_Angeles"' >> conf/local.conf
          echo 'IMAGE_INSTALL:append = "\
              tzdata-core \
              tzdata-americas \
              default-language-en-us-utf8 \
              ivi-homescreen-release \
              flutter-gallery-release \
              flutter-secure-storage-example-release \
              flutter-video-player-example-release \
              membrane-dart-example \
              "' >> conf/local.conf
          echo 'LICENSE_FLAGS_ACCEPTED += " commercial"' >> conf/local.conf
          echo '********** conf/local.conf **********'
          cat conf/local.conf
          echo '***************************************'
          bitbake-layers show-layers
          echo '***************************************'
          bitbake -e virtual/kernel | grep "^PV"
          bitbake -e virtual/kernel | grep "^PN"
          echo '***************************************'
          bitbake -e ${{ env.IMAGE }} | grep "^DISTRO_FEATURES"
          bitbake -e ${{ env.IMAGE }} | grep "^IMAGE_FEATURES"
          echo '***************************************'
          bitbake -e > bb.environment
          bitbake -c do_cleansstate flutter-sdk-native
          bitbake -c do_cleansstate flutter-engine-release
          bitbake -c do_cleansstate flutter-gallery-release
          bitbake -c do_cleansstate flutter-secure-storage-example-release

      - name: Build rpb-weston-image
        shell: bash
        working-directory: ../db410c-kirkstone
        run: |
          WORKSPACE=`pwd`
          . ./setup-environment ${{ env.MACHINE }}
          bitbake ${{ env.IMAGE }}
          ARTIFACTS=/home/dev/artifacts
          rm -rf ${ARTIFACTS}/*
          cp bb.environment ${ARTIFACTS}
          cd tmp-rpb_wayland-glibc/deploy/images/${{ env.MACHINE }}
          ${WORKSPACE}/conf/db820c/gen_flat_build_folder.sh ${{ env.MACHINE }} emmc ${{ env.BOOT_VERSION }} ${{ env.BOOT_MD5 }}
          cp flat_build_emmc.tar.gz ${ARTIFACTS}
          cp ${{ env.IMAGE }}-${{ env.MACHINE }}.tar.xz ${ARTIFACTS}
          ls -la ${ARTIFACTS}

      - name: Publish SD card image artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.MACHINE }}-${{ env.IMAGE }}
          path: |
             /home/dev/artifacts/*
